#version 100
precision highp float;
precision highp int;

attribute vec3 vertex_pos;
attribute vec3 vertex_normal;
attribute vec4 vertex_color;
attribute vec2 vertex_tex_coord;
attribute float vertex_tex_id;

varying vec4 color;

// mvp matrix
uniform mat4 translationMatrix;
uniform mat4 viewingMatrix;
uniform mat4 pvmMatrix;
uniform mat3 normalMtx;

// light
uniform vec3 light_vector;
uniform vec3 eye_pos;

varying float df;
varying float sf;
varying float distance_factor;
varying vec2 text_coord;

void main() {
#if 1
    // normalize light direction
    vec3 Lig = normalize(-light_vector);
    text_coord = vertex_tex_coord;
    // vec3 Lig = vec3(-normalize(viewingMatrix * translationMatrix * vec4(light_vector, 1.0)));
    vec3 Nor = normalMtx * vertex_normal;
    vec3 E = vec3(0, 1, 0);
    vec3 H = normalize(Lig + E);
    distance_factor = 1.0 / length(eye_pos - vertex_pos);

    df = max(0.0, dot(Nor, Lig));
    sf = max(0.0, dot(Nor, H));

#endif

    gl_Position = pvmMatrix * vec4(vertex_pos, 1.0);
}
