#version 330 core
precision highp float;
#define MAX_MODEL_PER_DRAW 200

// light property
uniform vec4 mtlAmbientColor;
uniform vec4 mtlDiffuseColor;
uniform vec4 mtlSpecularColor;
uniform float mtlSpecularExponent;


// for texture
uniform sampler2D colorText;
uniform sampler2D posText;
uniform sampler2D normalText;
in vec2 text_coord;

// for selection
in float downParam;
in vec3 scrPos;

// reflection
uniform float alpha;

// out color
out vec4 oColor;

// gbuffer
//in vec3 lightPos;

// sunshine
uniform mat4 pvMatrix;
uniform vec4 shineColor;
uniform vec3 shinePoint;
uniform float shineSize;
uniform float shineFac;


void main() {
    vec4 lightScr = pvMatrix * vec4(shinePoint, 1.0);
    lightScr = lightScr / lightScr.w;
        if (length(lightScr.xy * shineFac - scrPos.xy) < shineSize) {
            float factor = (shineSize - length(vec2(lightScr.xy * shineFac) - scrPos.xy)) / shineSize;
            oColor = shineColor * shineColor.w;
            oColor *= 1.6 * pow(factor, 2.0);
    } else {
        oColor = vec4(0.0);
    }
}
