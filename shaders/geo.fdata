#version 330 core
precision highp float;

// light property
uniform vec4 mtlAmbientColor;
uniform vec4 mtlDiffuseColor;
uniform vec4 mtlSpecularColor;
uniform float mtlSpecularExponent;

// for texture
uniform sampler2D gl3d_texture_ambient;
uniform sampler2D gl3d_texture_diffuse;
uniform sampler2D gl3d_texture_specular;

// reflection
uniform float alpha;

// out color
layout (location = 0) out vec4 gColor;
layout (location = 1) out vec3 gPos;
layout (location = 2) out vec3 gNormal;

void main() {
    // 计算自然色
    gColor = vec4(0.3);
    gColor.w = 1.0f;
    gPos = vec3(0.0f);
    gNormal = vec3(1.0f);
}
