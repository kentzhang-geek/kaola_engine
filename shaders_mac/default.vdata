#version 410
precision highp float;
precision highp int;

in vec3 vertex_pos;
in vec3 vertex_normal;
in vec4 vertex_color;
in vec2 vertex_tex_coord;
in float vertex_tex_id;

out vec4 color;
out vec3 normal;
out vec3 point_pos;
out vec3 view_vec;

uniform mat4 translationMatrix;
uniform mat4 viewingMatrix;
uniform mat4 pvmMatrix;
uniform mat3 normalMtx;
uniform vec3 eye_pos;

void main() {
    color = vertex_color;

#if 0
    // calculate real normal
    vec4 tmp = vec4((translationMatrix) * vec4(vertex_normal, 1.0));
    normal = normalize(vec3(tmp.x, tmp.y, tmp.z));
    point_pos = vec3(translationMatrix * vec4(vertex_pos, 1.0));
#endif
    
    // gl_Position = vec4(vertex_pos, 1.0);  // TEST positions
    gl_Position = pvmMatrix * vec4(vertex_pos, 1.0);
}
